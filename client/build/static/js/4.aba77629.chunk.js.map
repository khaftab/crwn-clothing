{"version":3,"sources":["Components/collection-preview/CollectionPreview.jsx","Components/collection-overview/CollectionOverview.jsx","Components/collection-overview/CollectionOverviewContainer.jsx","Components/with-spinner/WithSpinner.jsx","Components/collection-item/Collection.syles.js","Components/collection-item/CollectionItem.jsx"],"names":["CollectionPreview","title","items","className","toUpperCase","filter","item","index","map","CollectionItem","id","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","restProperty","isLoading","state","selectIsCollectionLoaded","compose","WithSpinner","CollectionOverview","WrappedComponent","otherProps","styled","require","default","CollectionItemContainer","div","BackgroundImage","imageUrl","AddButton","CustomButton","CollectionFooter","NameContainer","span","PriceContainer","dispatch","addItem","name","price","onClick","inverted"],"mappings":"2PAqBeA,MAjBf,YAA8C,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAEhC,OACI,mCACI,sBAAKC,UAAU,qBAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBF,EAAMG,gBAC7B,qBAAKD,UAAU,UAAf,SACKD,EAAMG,QAAO,SAACC,EAAMC,GAAP,OAAiBA,EAAQ,KAAGC,KAAI,SAACF,GAAD,OAC1C,cAACG,EAAA,EAAD,CAA8BH,KAAMA,GAAfA,EAAKI,e,OCMlD,IAAMC,EAAkBC,YAAyB,CAC7CC,YAAaC,MAGFC,cAAQJ,EAARI,EAff,YAA8C,IAAhBF,EAAe,EAAfA,YAE1B,OACI,qBAAKV,UAAU,sBAAf,SACKU,GAAeA,EAAYL,KAAI,gBAAGE,EAAH,EAAGA,GAAOM,EAAV,6BAC5B,cAAC,EAAD,eAAgCA,GAARN,WCLlCC,EAAkBC,YAAyB,CAC7CK,UAAW,SAAAC,GAAK,OAAKC,YAAyBD,MAGnCE,4BACXL,YAAQJ,GACRU,IAFWD,CAGbE,I,yECNaD,IALK,SAAAE,GAAgB,OAAI,YAAmC,IAAhCN,EAA+B,EAA/BA,UAAcO,EAAiB,6BACtE,OAAOP,EAAY,cAAC,IAAD,IAAc,cAACM,EAAD,eAAsBC,O,u9CCF1CC,EAAWC,EAAQ,IAA5BC,QAEKC,EAA0BH,EAAOI,IAAV,KAkCvBC,EAAkBL,EAAOI,IAAV,KAMJ,gBAAGE,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGXC,EAAYP,EAAOQ,IAAPR,CAAH,KAeTS,EAAmBT,EAAOI,IAAV,KAQhBM,EAAgBV,EAAOW,KAAV,KAKbC,EAAiBZ,EAAOW,KAAV,KChDZrB,gBAAQ,MAJI,SAAAuB,GAAQ,MAAK,CACpCC,QAAS,SAAAjC,GAAI,OAAIgC,EAASC,YAAQjC,QAGvBS,EArBf,YAA4C,IAAlBT,EAAiB,EAAjBA,KAAMiC,EAAW,EAAXA,QACpBC,EAA0BlC,EAA1BkC,KAAMC,EAAoBnC,EAApBmC,MAAOV,EAAazB,EAAbyB,SAErB,OACI,eAACH,EAAD,WACI,cAACE,EAAD,CAAiB3B,UAAU,QAAQ4B,SAAUA,IAG7C,eAACG,EAAD,WACI,cAACC,EAAD,CAAehC,UAAU,OAAzB,SAAiCqC,IACjC,cAACH,EAAD,CAAgBlC,UAAU,QAA1B,SAAmCsC,OAEvC,cAACT,EAAD,CAAWU,QAAS,kBAAMH,EAAQjC,IAAOqC,UAAQ,EAAjD","file":"static/js/4.aba77629.chunk.js","sourcesContent":["import React from 'react'\r\nimport CollectionItem from '../collection-item/CollectionItem'\r\nimport './collection-preview.styles.scss'\r\n\r\nfunction CollectionPreview({ title, items }) {\r\n\r\n    return (\r\n        <>\r\n            <div className='collection-preview'>\r\n                <h1 className='title'>{title.toUpperCase()}</h1>\r\n                <div className=\"preview\">\r\n                    {items.filter((item, index) => index < 4).map((item) => (\r\n                        <CollectionItem key={item.id} item={item} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollectionPreview\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport CollectionPreview from '../collection-preview/CollectionPreview'\r\nimport { selectCollectionsForPreview } from '../../redux/shop/shopSelector'\r\nimport './collection-overview.styles.scss'\r\n\r\nfunction CollectionOverview({ collections }) {\r\n\r\n    return (\r\n        <div className='collection-overview'>\r\n            {collections && collections.map(({ id, ...restProperty }) => (\r\n                <CollectionPreview key={id} {...restProperty} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    collections: selectCollectionsForPreview\r\n})\r\n\r\nexport default connect(mapStateToProps)(CollectionOverview)\r\n","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectIsCollectionLoaded } from '../../redux/shop/shopSelector'\r\nimport WithSpinner from '../with-spinner/WithSpinner'\r\nimport CollectionOverview from './CollectionOverview'\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: state => !selectIsCollectionLoaded(state)\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionOverview)","import React from 'react'\r\nimport Spinner from '../spinner/Spinner'\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />\r\n}\r\n\r\n\r\nexport default WithSpinner\r\n","import CustomButton from \"../custom-button/CustomButton\";\r\n\r\nconst { default: styled } = require(\"styled-components\");\r\n\r\nexport const CollectionItemContainer = styled.div`\r\nwidth: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.85;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n  \r\n      button {\r\n        opacity: unset;\r\n      }\r\n\r\n  }\r\n`\r\n\r\nexport const BackgroundImage = styled.div`\r\nwidth: 100%;\r\n    height: 95%;\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-bottom: 5px;\r\n    background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`\r\n\r\nexport const AddButton = styled(CustomButton)`\r\nwidth: 80%;\r\nopacity: 0.7;\r\nposition: absolute;\r\ntop: 255px;\r\ndisplay: none;\r\n\r\n@media screen and (max-width: 800px) {\r\n  display: block;\r\n  opacity: 0.9;\r\n  min-width: unset;\r\n  padding: 0 10px;\r\n}\r\n`\r\n\r\nexport const CollectionFooter = styled.div`\r\nwidth: 100%;\r\n    height: 5%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 18px;\r\n`\r\n\r\nexport const NameContainer = styled.span`\r\nwidth: 90%;\r\n      margin-bottom: 15px;\r\n`\r\n\r\nexport const PriceContainer = styled.span`\r\nwidth: 10%;\r\n`","import React from 'react'\r\nimport './collection-item.styles.scss'\r\nimport { connect } from 'react-redux'\r\nimport { addItem } from '../../redux/cart/cartActions'\r\nimport { CollectionItemContainer, CollectionFooter, BackgroundImage, AddButton, PriceContainer, NameContainer } from './Collection.syles'\r\n\r\nfunction CollectionItem({ item, addItem }) {\r\n    const { name, price, imageUrl } = item\r\n\r\n    return (\r\n        <CollectionItemContainer >\r\n            <BackgroundImage className='image' imageUrl={imageUrl}>\r\n\r\n            </BackgroundImage>\r\n            <CollectionFooter >\r\n                <NameContainer className=\"name\">{name}</NameContainer>\r\n                <PriceContainer className=\"price\">{price}</PriceContainer>\r\n            </CollectionFooter>\r\n            <AddButton onClick={() => addItem(item)} inverted>ADD TO CART</AddButton>\r\n        </CollectionItemContainer>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem)\r\n// this is an collection item"],"sourceRoot":""}
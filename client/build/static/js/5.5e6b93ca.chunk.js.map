{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/form-input/FormInput.jsx","Components/sign-in/SignIn.jsx","Components/sign-up/SignUp.jsx","Pages/signIn-and-signUp/SignInAndSignUpPage.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","label","restProperty","className","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","setEmail","setPassword","onSubmit","e","preventDefault","type","onChange","target","name","CustomButton","onClick","isGoogleSignIn","signUpStart","displayName","setDisplayName","confirmPassword","setConfirmPassword","handleSubmit","a","alert","required","SignInAndSignUpPage"],"mappings":"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","file":"static/js/5.5e6b93ca.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\r\nimport './form-input.styles.scss'\r\n\r\nfunction FormInput({ label, ...restProperty }) {\r\n    return (\r\n        <div className='group'>\r\n            <input className='form-input'  {...restProperty} />\r\n            {label ? (\r\n                <label className={`${restProperty.value.length ? 'shrink' : ''} form-input-label`}>{label}</label>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FormInput\r\n\r\n//  handlechnage prop seems useless onChange={handleChange}","import React, { useState } from 'react'\r\nimport FormInput from '../form-input/FormInput'\r\nimport CustomButton from '../custom-button/CustomButton'\r\nimport { emailSignInStart, googleSignInStart } from '../../redux/user/userActions'\r\n\r\nimport './sign-in.styles.scss'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction SignIn({ emailSignInStart, googleSignInStart }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        emailSignInStart(email, password)\r\n    }\r\n\r\n    return (\r\n        <div className='sign-in'>\r\n            <h2>I already have an account</h2>\r\n            <span>Sign in with your email and password</span>\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput type=\"email\" value={email} onChange={e => setEmail(e.target.value)} label='Email' name='email' />\r\n\r\n                <FormInput type=\"password\" value={password} onChange={e => setPassword(e.target.value)} label='password' name='password' />\r\n                <div className=\"buttons\">\r\n                    <CustomButton type='submit'>LOGIN</CustomButton >\r\n                    <CustomButton onClick={googleSignInStart} isGoogleSignIn type='button'>Sign in With Google</CustomButton>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)\r\n\r\n// handleChange={handleSubmit}\r\n","import React, { useState } from 'react'\r\nimport './sign-up.styles.scss'\r\nimport FormInput from '../form-input/FormInput'\r\nimport CustomButton from '../custom-button/CustomButton'\r\nimport { signUpStart } from '../../redux/user/userActions'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction SignUp({ signUpStart }) {\r\n\r\n    const [displayName, setDisplayName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n\r\n        if (password !== confirmPassword) {\r\n            alert(\"Password don't match\")\r\n            return\r\n        }\r\n\r\n        signUpStart(displayName, email, password)\r\n\r\n        setDisplayName('')\r\n        setEmail('')\r\n        setPassword('')\r\n        setConfirmPassword('')\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='sign-up'>\r\n            <h2 className=\"title\">I do not have any account</h2>\r\n            <span>Sign up with your email and password</span>\r\n            <form onSubmit={handleSubmit} className=\"sign-up-form\">\r\n\r\n                <FormInput\r\n                    type='text'\r\n                    name='displayName'\r\n                    value={displayName}\r\n                    onChange={e => setDisplayName(e.target.value)}\r\n                    label='Display Name'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    label='Email'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='password'\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    label='Password'\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type='password'\r\n                    name='confirmPassword'\r\n                    value={confirmPassword}\r\n                    onChange={e => setConfirmPassword(e.target.value)}\r\n                    label='Confirm Password'\r\n                    required\r\n                />\r\n                <CustomButton type='submit'>SIGN UP</CustomButton>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (displayName, email, password) => dispatch(signUpStart({ displayName, email, password }))\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport './signIn-and-signUp.styles.scss'\r\nimport SignIn from '../../Components/sign-in/SignIn'\r\nimport SignUp from '../../Components/sign-up/SignUp'\r\n\r\nfunction SignInAndSignUpPage() {\r\n\r\n    return (\r\n        <div className='sign-in-and-sign-out'>\r\n            <SignIn />\r\n            <SignUp />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignInAndSignUpPage\r\n"],"sourceRoot":""}
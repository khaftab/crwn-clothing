{"version":3,"sources":["Pages/collection/Collection.jsx","Pages/collection/CollectionContainer.jsx","Components/with-spinner/WithSpinner.jsx","Components/collection-item/Collection.syles.js","Components/collection-item/CollectionItem.jsx"],"names":["selectCollections","createSelector","state","shop","collections","mapStateToProps","createStructuredSelector","connect","routeCollection","useParams","Id","title","items","className","map","item","CollectionItem","id","isLoading","selectIsCollectionLoaded","compose","WithSpinner","Collection","WrappedComponent","otherProps","styled","require","default","CollectionItemContainer","div","BackgroundImage","imageUrl","AddButton","CustomButton","CollectionFooter","NameContainer","span","PriceContainer","dispatch","addItem","name","price","onClick","inverted"],"mappings":"gOA0BA,IACMA,EAAoBC,YACtB,CAFiB,SAAAC,GAAK,OAAIA,EAAMC,QAGhC,SAAAA,GAAI,OAAIA,EAAKC,eAGXC,EAAkBC,YAAyB,CAC7CF,YAAaJ,IAGFO,cAAQF,EAARE,EA7Bf,YAAsC,IAI5BC,EAJ2B,EAAfJ,YACHK,cAG4BC,IACnCC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,MAEf,OACI,sBAAKC,UAAU,kBAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBF,IACvB,qBAAKE,UAAU,QAAf,SAEQD,EAAME,KAAI,SAAAC,GAAI,OAAI,cAACC,EAAA,EAAD,CAA8BD,KAAMA,GAAfA,EAAKE,eCZ1DZ,EAAkBC,YAAyB,CAC7CY,UAAW,SAAAhB,GAAK,OAAKiB,YAAyBjB,MAGnCkB,4BACXb,YAAQF,GACRgB,IAFWD,CAGbE,I,yECNaD,IALK,SAAAE,GAAgB,OAAI,YAAmC,IAAhCL,EAA+B,EAA/BA,UAAcM,EAAiB,6BACtE,OAAON,EAAY,cAAC,IAAD,IAAc,cAACK,EAAD,eAAsBC,O,u9CCF1CC,EAAWC,EAAQ,IAA5BC,QAEKC,EAA0BH,EAAOI,IAAV,KAkCvBC,EAAkBL,EAAOI,IAAV,KAMJ,gBAAGE,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGXC,EAAYP,EAAOQ,IAAPR,CAAH,KAeTS,EAAmBT,EAAOI,IAAV,KAQhBM,EAAgBV,EAAOW,KAAV,KAKbC,EAAiBZ,EAAOW,KAAV,KChDZ7B,gBAAQ,MAJI,SAAA+B,GAAQ,MAAK,CACpCC,QAAS,SAAAxB,GAAI,OAAIuB,EAASC,YAAQxB,QAGvBR,EArBf,YAA4C,IAAlBQ,EAAiB,EAAjBA,KAAMwB,EAAW,EAAXA,QACpBC,EAA0BzB,EAA1ByB,KAAMC,EAAoB1B,EAApB0B,MAAOV,EAAahB,EAAbgB,SAErB,OACI,eAACH,EAAD,WACI,cAACE,EAAD,CAAiBjB,UAAU,QAAQkB,SAAUA,IAG7C,eAACG,EAAD,WACI,cAACC,EAAD,CAAetB,UAAU,OAAzB,SAAiC2B,IACjC,cAACH,EAAD,CAAgBxB,UAAU,QAA1B,SAAmC4B,OAEvC,cAACT,EAAD,CAAWU,QAAS,kBAAMH,EAAQxB,IAAO4B,UAAQ,EAAjD","file":"static/js/6.3849d86b.chunk.js","sourcesContent":["import React from 'react'\r\nimport CollectionItem from '../../Components/collection-item/CollectionItem'\r\nimport './collection.styles.scss'\r\nimport { useParams } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { createSelector, createStructuredSelector } from 'reselect'\r\n\r\nfunction Collection({ collections }) {\r\n    const params = useParams()\r\n    // const routeCollection = collections.find(collection => params.Id == collection.routeName) \r\n    // this is for when our data is in array. In array it takes time to find data so it is better to use objects\r\n    const routeCollection = collections[params.Id]\r\n    const { title, items } = routeCollection\r\n\r\n    return (\r\n        <div className='collection-page'>\r\n            <h2 className='title'>{title}</h2>\r\n            <div className=\"items\">\r\n                {\r\n                    items.map(item => <CollectionItem key={item.id} item={item} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst shopSelector = state => state.shop\r\nconst selectCollections = createSelector(\r\n    [shopSelector],\r\n    shop => shop.collections\r\n)\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    collections: selectCollections\r\n})\r\n\r\nexport default connect(mapStateToProps)(Collection)\r\n","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport WithSpinner from '../../Components/with-spinner/WithSpinner'\r\nimport { selectIsCollectionLoaded } from '../../redux/shop/shopSelector'\r\nimport Collection from './Collection'\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: state => !selectIsCollectionLoaded(state)\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(Collection)","import React from 'react'\r\nimport Spinner from '../spinner/Spinner'\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />\r\n}\r\n\r\n\r\nexport default WithSpinner\r\n","import CustomButton from \"../custom-button/CustomButton\";\r\n\r\nconst { default: styled } = require(\"styled-components\");\r\n\r\nexport const CollectionItemContainer = styled.div`\r\nwidth: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.85;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n  \r\n      button {\r\n        opacity: unset;\r\n      }\r\n\r\n  }\r\n`\r\n\r\nexport const BackgroundImage = styled.div`\r\nwidth: 100%;\r\n    height: 95%;\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-bottom: 5px;\r\n    background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`\r\n\r\nexport const AddButton = styled(CustomButton)`\r\nwidth: 80%;\r\nopacity: 0.7;\r\nposition: absolute;\r\ntop: 255px;\r\ndisplay: none;\r\n\r\n@media screen and (max-width: 800px) {\r\n  display: block;\r\n  opacity: 0.9;\r\n  min-width: unset;\r\n  padding: 0 10px;\r\n}\r\n`\r\n\r\nexport const CollectionFooter = styled.div`\r\nwidth: 100%;\r\n    height: 5%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 18px;\r\n`\r\n\r\nexport const NameContainer = styled.span`\r\nwidth: 90%;\r\n      margin-bottom: 15px;\r\n`\r\n\r\nexport const PriceContainer = styled.span`\r\nwidth: 10%;\r\n`","import React from 'react'\r\nimport './collection-item.styles.scss'\r\nimport { connect } from 'react-redux'\r\nimport { addItem } from '../../redux/cart/cartActions'\r\nimport { CollectionItemContainer, CollectionFooter, BackgroundImage, AddButton, PriceContainer, NameContainer } from './Collection.syles'\r\n\r\nfunction CollectionItem({ item, addItem }) {\r\n    const { name, price, imageUrl } = item\r\n\r\n    return (\r\n        <CollectionItemContainer >\r\n            <BackgroundImage className='image' imageUrl={imageUrl}>\r\n\r\n            </BackgroundImage>\r\n            <CollectionFooter >\r\n                <NameContainer className=\"name\">{name}</NameContainer>\r\n                <PriceContainer className=\"price\">{price}</PriceContainer>\r\n            </CollectionFooter>\r\n            <AddButton onClick={() => addItem(item)} inverted>ADD TO CART</AddButton>\r\n        </CollectionItemContainer>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem)\r\n// this is an collection item"],"sourceRoot":""}
{"version":3,"sources":["Components/checkout-item/CheckoutItem.jsx","Components/stripe-button/StripeButton.jsx","Pages/checkout/Checkout.jsx"],"names":["connect","dispatch","clearItemFromCart","item","addItem","removeItem","cartItem","imageUrl","name","price","quantity","className","src","alt","onClick","StripeButton","priceForStripe","label","image","panelLabel","billingAddress","shippingAddress","amount","token","console","log","axios","url","method","data","then","response","alert","catch","err","description","stripeKey","currency","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","id"],"mappings":"mOAyBA,IAMeA,cAAQ,MANI,SAAAC,GAAQ,MAAK,CACpCC,kBAAmB,SAAAC,GAAI,OAAIF,EAASC,YAAkBC,KACtDC,QAAS,SAAAD,GAAI,OAAIF,EAASG,YAAQD,KAClCE,WAAY,SAAAF,GAAI,OAAIF,EAASI,YAAWF,QAG7BH,EA1Bf,YAA6E,IAArDM,EAAoD,EAApDA,SAAUJ,EAA0C,EAA1CA,kBAAmBE,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAClDE,EAAoCD,EAApCC,SAAUC,EAA0BF,EAA1BE,KAAMC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACI,sBAAKC,UAAU,gBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKC,IAAKL,EAAUM,IAAI,WAE5B,sBAAMF,UAAU,OAAhB,SAAwBH,IACxB,uBAAMG,UAAU,WAAhB,UACI,qBAAKA,UAAU,QAAQG,QAAS,kBAAMT,EAAWC,IAAjD,oBACA,sBAAMK,UAAU,QAAhB,SAAyBD,IAEzB,qBAAKC,UAAU,QAAQG,QAAS,kBAAMV,EAAQE,IAA9C,uBAEJ,sBAAMK,UAAU,QAAhB,SAAyBF,IACzB,qBAAKE,UAAU,gBAAgBG,QAAS,kBAAMZ,EAAkBI,IAAhE,0B,oCCsBGS,MAtCf,YAAkC,IAAVN,EAAS,EAATA,MACdO,EAAyB,IAARP,EAkBvB,OAEI,cAAC,IAAD,CACIQ,MAAM,UACNT,KAAK,qBACLU,MAAM,sCACNC,WAAW,UACXC,gBAAc,EACdC,iBAAe,EACfC,OAAQN,EACRO,MAzBQ,SAAAA,GACZC,QAAQC,IAAIF,GAEZG,IAAM,CACFC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACFP,OAAQN,EACRO,WAELO,MAAK,SAAAC,GAAQ,OAAIC,MAAM,4BAA0BC,OAAM,SAAAC,GACtDV,QAAQC,IAAR,wBAA6BS,IAC7BF,MAAM,2GAcNG,YAAW,oCAA+B1B,GAC1C2B,UA7Be,8GA8BfC,SAAS,SCUrB,IAAMC,EAAkBC,YAAyB,CAC7CC,UAAWC,IACXC,MAAOC,MAGI3C,sBAAQsC,EAARtC,EA3Cf,YAAyC,IAArBwC,EAAoB,EAApBA,UAAWE,EAAS,EAATA,MAE3B,OACI,sBAAK/B,UAAU,gBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,eAAf,SACI,6CAEJ,qBAAKA,UAAU,eAAf,SACI,iDAEJ,qBAAKA,UAAU,eAAf,SACI,8CAEJ,qBAAKA,UAAU,eAAf,SACI,2CAEJ,qBAAKA,UAAU,eAAf,SACI,+CAKJ6B,EAAUI,KAAI,SAAAtC,GAAQ,OAAI,cAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAASuC,OAE1D,sBAAKlC,UAAU,QAAf,0BACmB+B,KAEnB,sBAAK/B,UAAU,eAAf,uEAEI,uBAFJ,iDAKA,cAAC,EAAD,CAAcF,MAAOiC","file":"static/js/7.250ce0e3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cartActions'\r\nimport './checkout-item.styles.scss'\r\n\r\nfunction CheckoutItem({ cartItem, clearItemFromCart, addItem, removeItem }) {\r\n    const { imageUrl, name, price, quantity } = cartItem\r\n    return (\r\n        <div className='checkout-item'>\r\n            <div className='image-container'>\r\n                <img src={imageUrl} alt=\"item\" />\r\n            </div>\r\n            <span className=\"name\">{name}</span>\r\n            <span className=\"quantity\">\r\n                <div className=\"arrow\" onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n                <span className=\"value\">{quantity}</span>\r\n\r\n                <div className=\"arrow\" onClick={() => addItem(cartItem)}>&#10095;</div>\r\n            </span>\r\n            <span className=\"price\">{price}</span>\r\n            <div className=\"remove-button\" onClick={() => clearItemFromCart(cartItem)}>&#10005;</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    clearItemFromCart: item => dispatch(clearItemFromCart(item)),\r\n    addItem: item => dispatch(addItem(item)),\r\n    removeItem: item => dispatch(removeItem(item))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem)\r\n","import React from 'react'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\nimport axios from 'axios'\r\n\r\nfunction StripeButton({ price }) {\r\n    const priceForStripe = price * 100\r\n    const publishableKey = 'pk_test_51HpyfCH89ZDXHz0N69OTiweTGbnziEFpuzjP3hSydmngabkWkIIkeHFQpIdWIC8sz9vAynPksy5ladpA21lIclLS00SQK479I9'\r\n\r\n    const onToken = token => {\r\n        console.log(token)\r\n\r\n        axios({\r\n            url: 'payment',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                token\r\n            }\r\n        }).then(response => alert('Payment is succesfull')).catch(err => {\r\n            console.log(`Payment error ${err}`)\r\n            alert('There is an issue with your payment. Please make sure you enter the correct the details of the card')\r\n        })\r\n    }\r\n    return (\r\n\r\n        <StripeCheckout\r\n            label='Pay Now'\r\n            name='CRWN clothing Ltd.'\r\n            image='https://sendeyo.com/up/d/f3eb2117da'\r\n            panelLabel='Pay Now'\r\n            billingAddress\r\n            shippingAddress\r\n            amount={priceForStripe}\r\n            token={onToken}\r\n            description={`Your total price is \\u20B9${price}`} // unicode does not apply on dec code it works on hex code \r\n            stripeKey={publishableKey}\r\n            currency='INR'\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default StripeButton\r\n","import React from 'react'\r\nimport './checkout.styles.scss'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectCartItems, selectCartTotal } from '../../redux/cart/cartSelector'\r\nimport CheckoutItem from '../../Components/checkout-item/CheckoutItem'\r\nimport StripeButton from '../../Components/stripe-button/StripeButton'\r\n\r\nfunction Checkout({ cartItems, total }) {\r\n\r\n    return (\r\n        <div className='checkout-page'>\r\n            <div className=\"checkout-header\">\r\n                <div className=\"header-block\">\r\n                    <span>Product</span>\r\n                </div>\r\n                <div className=\"header-block\">\r\n                    <span>Description</span>\r\n                </div>\r\n                <div className=\"header-block\">\r\n                    <span>Quantity</span>\r\n                </div>\r\n                <div className=\"header-block\">\r\n                    <span>Price</span>\r\n                </div>\r\n                <div className=\"header-block\">\r\n                    <span>Remove</span>\r\n                </div>\r\n\r\n            </div>\r\n            {\r\n                cartItems.map(cartItem => <CheckoutItem key={cartItem.id} cartItem={cartItem} />)\r\n            }\r\n            <div className=\"total\">\r\n                TOTAL: &#8377;{total}\r\n            </div>\r\n            <div className=\"test-warning\">\r\n                *Please use this demo credit card details to make payment*\r\n                <br />\r\n                4242 4242 4242 4242 - Exp: 01/22 - CVV: 123\r\n            </div>\r\n            <StripeButton price={total} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total: selectCartTotal\r\n})\r\n\r\nexport default connect(mapStateToProps)(Checkout)\r\n"],"sourceRoot":""}